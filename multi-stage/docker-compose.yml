# run with `docker-compose up -d`
# to unmount volume and reinitialize schema/data, run with `docker-compose down -v`
version: '3.5'
services:
  api:
    build: .
    restart: always
    volumes:
      #Mount application code
      - ./:/app
      #Mount docker socket so that docker can be used on image
      - /var/run/docker.sock:/var/run/docker.sock
      #Mount gCloud configuration
      - ~/.config/gcloud/:/root/.config/gcloud/
    env_file:
      #Use env file instead of Spring profiles properties
      - local_properties.env
    ports:
      - 8080:8080
    command: nodemon -e java --watch src --exec 'mvn spring-boot:run || touch src/'
    # networks:
    #   - springbootapp
    # depends_on:
    #   - db
#   db:
#     image: postgres:10
#     container_name: db
#     networks: 
#       - appnet
#     environment:
#       - POSTGRES_DB=appdb
#       - POSTGRES_USER=myApp
#       - POSTGRES_PASSWORD=ppaym
#     # volumes:
#       # - postgresql_data:/var/lib/postgresql/data
#     networks:
#       - springbootapp

# networks:
#   springbootapp:
#     name: springbootapp_network

# volumes:
#   db_data: